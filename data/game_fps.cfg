// fps specific cfg stuff goes here

togglezoom = [ zoom (if (= $zoom 1) -1 1) ]
sayteamcommand = [inputcommand (if (>= $numargs 1) [result $arg1] [result ""]) [sayteam $commandbuf] "[team]"]

mapcomplete = [ complete $arg1 packages/base ogz ]
mapcomplete map

modenames = "ffa coop teamplay insta instateam effic efficteam tac tacteam capture regencapture ctf instactf protect instaprotect hold instahold efficctf efficprotect effichold collect instacollect efficcollect hideandseek"
modenamesex = ["FFA" "coop-edit" "teamplay" "instagib" "instagib team" "efficiency" "efficiency team" "tactics" "tactics team" "capture" "regen capture" "CTF" "instagib CTF" "protect" "instagib protect" "hold" "instagib hold" "efficiency CTF" "efficiency protect" "efficiency hold" "collect" "instagib collect" "efficiency collect" "hide and seek"]

loop i (listlen $modenames) [
    mname = (at $modenames $i)
    alias $mname [ if (mode @i) [if (> $numargs 0) [map $arg1] [map]] ]
    mapcomplete $mname
]

spmodenames = "sp dmsp"
loop i (listlen $spmodenames) [
    mname = (at $spmodenames $i)
    alias $mname [ if (mode (- @i 3)) [if (> $numargs 0) [map $arg1] [map]] ]
    mapcomplete $mname
]

complete importcube packages/cube cgz

demo = [ stopdemo; if (mode -1) [if (> $numargs 0) [map $arg1] [map]] ]
complete demo "demo/" dmo

speditlock = 1
allowspedit = [ speditlock = 0; onrelease [speditlock = 1] ]

allowedittoggle = [
    if (&& (m_sp (getmode)) $speditlock) [
        error "you must hold" (prettylist (searchbinds "allowspedit") "or") "to toggle editing in single player modes"
        result 0
    ] [
        result 1
    ]
]

playermodelnum = 2

playermodeldir0 = "mrfixit"
playermodelicon0 = "mrfixit"
playermodelname0 = "Mr. Fixit"
playermodelstory0 = "Which orc do you choose when the mission calls for an all-purpose wrecking machine? Who do you call when the odds are stacked against you? ^f6Mr. Fixit^f~, that's who. Gifted with the ability to perform deconstructive surgery with any weapon, this orc gets the job done fast and with extreme prejudice."

playermodeldir1 = "snoutx10k"
playermodelicon1 = "snoutx10k"
playermodelname1 = "IronSnout X10K"
playermodelstory1 = "^f6IronSnout X10K ^f~is a hybrid model of the IronSnout series. Bred in the bowels of a top secret underground facility, this walking fragging machine is for one purpose: to annihilate the opposition. Part pig, part machine, ^f6IronSnout X10K ^f~knows no fear and fears no fragger."

playermodeldir = [getalias (concatword "playermodeldir" (if (> $numargs 0) [result $arg1] [result $playermodel]))]
playermodelicon = [getalias (concatword "playermodelicon" (if (> $numargs 0) [result $arg1] [result $playermodel]))]
playermodelname = [getalias (concatword "playermodelname" (if (> $numargs 0) [result $arg1] [result $playermodel]))]
playermodelstory = [getalias (concatword "playermodelstory" (if (> $numargs 0) [result $arg1] [result $playermodel]))]

playsong = [
  local cursong
  cursong = (+ (rnd 10) 1)
  if (!= $cursong (getalias oldsong)) [
    oldsong = $cursong
    music (concatword "sounds/music/kai_engel/" $cursong ".ogg") playsong
  ] [playsong]
]

//--Tomatenquark--
exec "data/guilib.cfg"
exec "data/maps.cfg"
if (integration) [exec "data/workshop.cfg"]

_keytype = 0
_keytypev = "bind"
floatspeedboost = [floatspeed 720; onrelease [floatspeed 100]]
fastsaw = [cwp = $getweapon; setweapon 0; attack; onrelease [setweapon $cwp]]

togglefullscreen = [
  if (&& (=s (getalias scr_wo) "") (=s (getalias scr_ho) ""))[scr_wo = $scr_w; scr_ho = $scr_h]
  if (= $fullscreen 1) [
    scr_wo = $scr_w
    scr_ho = $scr_h
    screenres (+ (div $scr_w 2) 512) (+ (div $scr_h 2) 256)
    fullscreen 0
  ] [fullscreen 1; screenres $scr_wo $scr_ho]
]

// /keyphr [press] [hold] [release] <0/1/2>
_bindhold = 0
_keyphrbuf = []
keyphr = [
  local curkey _kpress _krelease _khold _kstate _klist _klistm
  curkey = $arg1; _kpress = $arg2; _khold = $arg3; _krelease = $arg4; _kstate = $arg5
  do [
    (concatword (at ["" "edit" "spec"] $_kstate) "bind") $curkey [
      if (! $_bindhold) [_curmillis = (getmillis);  @@_kpress; _bindhold = 1]
      onrelease [
        if (< (getmillis) (+ $_curmillis 500)) [@@@_krelease] [@@@_khold]
        _bindhold = 0
      ]
    ]
  ]
  _klist = (concatword "[_key_" $curkey "][[" $_kpress "][" $_khold "][" $_krelease "]][_state_" $_kstate "]")
  _klistm = (listmatch (listmatch $_keyphrbuf (at $_klist 0)) (at $_klist 2)) // match key & state

  if (!= (listlen $_klistm) 0) [
    _keyphrbuf = (listreplace $_keyphrbuf (indexof $_keyphrbuf (at $_klistm 0)) (concatword "[" $_klist "]"))
  ] [append _keyphrbuf (concatword "[" $_klist "]")]
  if (&& (=s $_kpress "") (=s $_khold "") (=s $_krelease "")) [_keyphrbuf = (listdel $_keyphrbuf (concatword "[" $_klist "]"))]
]

// universal scrollwheel + modifier commands:
defaultmodifier = 0
modifier = $defaultmodifier
domodifier = [ modifier = $arg1; onrelease [ modifier = $defaultmodifier ] ]

universaldelta = [
  do [delta_@(if $editing [ result edit ] [ result game ])_@modifier @arg1]
]

delta_game_0 = [ if (= $arg1 1) [ weapon 2 3 5 4 1 6 0 ] [ weapon 4 1 6 2 3 5 0 ] ]

delta_edit_0 = [
    if $blendpaintmode [
        scrollblendbrush $arg1
    ] [
        editfacewentpush $arg1 1 // Fill and Empty cube
    ]
]
delta_edit_1 = [ nodebug [ gridpower (+ $arg1 $gridpower) ] ]
delta_edit_2 = [ editfacewentpush $arg1 0 ] // push face/corners selected
delta_edit_3 = [ editfacewentpush $arg1 2 ] // push corner pointed at by cursor
delta_edit_4 = [ if $blendpaintmode [rotateblendbrush $arg1] [editrotate $arg1] ] // rotate 90 degrees
delta_edit_5 = [ entproperty 0 $arg1 ]  // and the others
delta_edit_6 = [ edittex $arg1 ] // change textures
delta_edit_9 = [ selectbrush $arg1 ] // change heightmap brushes
delta_edit_10 = [ entautoview $arg1 ]

delta_edit_11 = [ entproperty 0 (* $arg1 $multiplier) ]
delta_edit_12 = [ entproperty 1 (* $arg1 $multiplier) ]
delta_edit_13 = [ entproperty 2 (* $arg1 $multiplier) ]
delta_edit_14 = [ entproperty 3 (* $arg1 $multiplier) ]
delta_edit_15 = [ entproperty 4 (* $arg1 $multiplier) ]

delta_edit_16 = [ vdelta [voffset (* $arg1 $multiplier2) 0] ] // vSlot: offset H
delta_edit_17 = [ vdelta [voffset 0 (* $arg1 $multiplier2)] ] // vSlot: offset V
delta_edit_18 = [ vdelta [vrotate $arg1] ] // vSlot: rotate
delta_edit_19 = [ vdelta [vscale (if (< $arg1 0) 0.5 2)] ] // vSlot: scale

multiplier = 1
multiplier2 = 16

guirolloveraction = []
guirolloverimgaction = []
guirolloverimgpath = []
guirollovername = []

precf = [ substr $arg1 0 (+ (strstr $arg1 .) (+ $arg2 1)) ]
defaultgamehud = [
  if (&& (= (m_edit (getmode)) 0) (= $editing 0)) [
    format "%5^f7%1 ^f5[%2]^t^f2(%3)^f7%4" (getname) (getclientnum) (getteam) (
      ? $timeremaining (concat "^tTime:^f2" (timeremaining 1)) (? (m_edit $getmode) "" "^t^f3Intermission")
    ) (? (> $getfollow -1) (
      format "^f7Following: ^f0%1 ^f5[%2]^t%3(%4)^n" (getclientname $getfollow) $getfollow (
        ? (=s (getclientteam $getfollow) $getteam) "^f1" "^f3"
      ) (getclientteam $getfollow)
    ) (
      format "^f7Frags: ^f2%1 ^f7| Deaths: ^f2%2 ^f7| Acc: ^f2%3%%^f7^n%4KpD: ^f2%5 ^f7| DDpD: ^f2%6^n" $getfrags $getdeaths $getaccuracy (
        ? (|| [m_ctf $getmode] [m_collect $getmode]) (format "%1: ^f2%2^f7 | " (? (m_ctf $getmode) "Flags" "Skulls") $getflags)
      ) (precf (divf (max 0 $getfrags) (max 1 $getdeaths)) 2) (precf (divf $gettotaldamage (max 1 $getdeaths)) 2)
    ))
  ]
]

// savemapthumb [optional folder] [optional name] [callback]
savemapthumb = [
  _ssttings = (concat $screenshotdir $screenshotformat $screenshotquality)
  _scname = "untitled"
  _scname = $(at [mapname _scname] (=s $mapname ""))
  _scfolder = "packages/base"
  _extracmd = $arg3
  if (!=s $arg2 "") [_scname = $arg2]
  if (!=s $arg1 "") [if (= (strstr $arg1 "/") -1)[_scname = $arg1] [_scfolder = $arg1]]
  screenshotdir $_scfolder
  screenshotformat 3
  screenshotquality 64
  hidehud 1
  sleep 100 [
    screenshot $_scname
    screenshotdir (at $_ssttings 0)
    screenshotformat (at $_ssttings 1)
    screenshotquality (at $_ssttings 2)
    hidehud 0
    do $_extracmd
  ]
]

// graphicquality 0/1/2 (fast/moderate/slow)
graphicquality = [
  local _graphicvars
  _graphicvars = [blobs bumpmodels caustics decalfade decals depthfx depthfxsize envmapmodels filltjoints glare glassenv grass grassdist maxdecaltris maxdynlights maxtexsize shaderdetail shadowmap texreduce vertwater waterfallenv waterfallrefract waterreflect waterrefract]
  loop v (listlen $_graphicvars) [
    (at $_graphicvars $v) (at (at [
      [0 0 0 10000 0 0 10 0 0 0 0 0 256 1024 0 256 0 0 2 0 0 0 0 0]
      [0 0 0 10000 1 0 10 1 0 0 1 0 256 1024 0 512 2 0 0 0 0 1 0 0]
      [1 1 1 60000 1 1 12 1 1 1 1 1 512 4096 5 0 3 1 0 1 1 1 1 1]
    ] $arg1) $v)
  ]
]
