//Tomatenquark Steam Workshop functions and menu

// returns a list of folders from registered content
workshopcustomcontent = [
  local _flist
  loopextensiondir fl [append _flist $fl]
  if (= (listlen $_flist) 0) [result 0] [result $_flist]
]

// same as above, but returns list of user content
workshopusercontent = [
  local _flist
  loophomedirpackages _fl [if (isnumber $_fl) [append _flist $_fl]]
  if (= (listlen $_flist) 0) [result 0] [result $_flist]
]

getusermapbyid = [
  _updateworkshop
  result (at $_allusermaps (at $_ucfolderids (indexof $_ucfolders $arg1)))
]

getallusermaps = [
  local _userallmaps
  if (workshopusercontent) [
    looplist uc (workshopusercontent) [
      loopfiles um (concatword "packages/" $uc) "ogz" [
        append _userallmaps $um
      ]
    ]
  ]
  result $_userallmaps
]

//can't list all extensions at once with loopextensionfiles
_commonexts = [.bak .bmp .cfg .jpg .ogz .png .txt .wpt]

getallregisteredcontent = [
  local _regallids _regallmaps _regallfiles
  if (workshopcustomcontent) [
    looplist rc (workshopcustomcontent) [
      if (isnumber $rc) [
        append _regallids $rc
        append _regallmaps "["
        loopextensionfiles rcf $rc ".ogz" [
          append _regallmaps $rcf
        ]
        append _regallmaps "]"
        append _regallfiles "["
        looplist e $_commonexts [
          loopextensionfiles rcf $rc $e [
            append _regallfiles $rcf
          ]
        ]
        append _regallfiles "]"
      ]
    ]
  ]
  if (&& (=s $_regallmaps "") (=s $_regallids "") (=s $_regallfiles "")) [result ""] [result (concatword "[" $_regallmaps "] [" $_regallids "] [" $_regallfiles "]")]
]

getregisteredmapbyid = [result (at (at (getallregisteredcontent) 0) (indexof (at (getallregisteredcontent) 1) $arg1))]
getregisteredidbymap = [result (at (at (getallregisteredcontent) 1) (indexof (at (getallregisteredcontent) 0) $arg1))]
getregisteredidbyfile = [result (at (at (getallregisteredcontent) 1) (indexof (at (getallregisteredcontent) 2) $arg1))]

renameworkshopusermap = [
  renamemap (concatword "packages/" $arg1 "/" (getusermapbyid $arg1)) (concatword "packages/" $arg1 "/" $arg2)
]

delworkshopusermap = [
  delmap (concatword "packages/" $arg1 "/" (getusermapbyid $arg1))
]

setmapdescription = [
  inputcommand $arg1 [
    maptitle (concat "Description:" $commandbuf)
    inputcommand (getname) [
      if (!=s $commandbuf "") [maptitle (concat $maptitle "- Author(s):" $commandbuf)]
      inputcommand "CC BY-SA 4.0" [
        if (!=s $commandbuf "") [maptitle (concat $maptitle "- License:" $commandbuf)]
      ] "^f8Map license:^f~"
    ] "^f8Map author(s):^f~"
  ] "^f8Map description:^f~"
  _updateworkshop
]

//example of detecting deleted IDs
//lists:
//  _allregcontent: [[map1.ogz] [map2.ogz map4.ogz] [map3.ogz]] [123 456 789] //previously saved content
//  getallregisteredcontent: [[map1.ogz] [map3.ogz]] [123 789] //current content
//input @IDs:
//  //removes all items from list 1 that matches list 2
//  _allnewregids = (listdiff [123 456 789] [123 789] "=") //no matches
//  _alldelregids = (listdiff [123 789] [123 456 789] "=") //two matches (123, 789)
//output:
//  _allnewregids: 0  
//  _alldelregids: [456]
_getregistupdate = [
  nodebug [
    if (!=s (getalias _allregcontent) "") [
      _allnewregids = (listdiff (at $_allregcontent 1) (at (getallregisteredcontent) 1) "=")
      _alldelregids = (listdiff (at (getallregisteredcontent) 1) (at $_allregcontent 1) "=")

      if (|| _allnewregids _alldelregids) [
        echo (concatword "^f5[Workshop] ^f1Applying updates...")
        _refreshtries = 0
      ] [
        if (= $arg1 1) [
          echo "^f5[Workshop] ^f1All up to date"
          //the download may take a while
          if (=s (getalias _refreshtries) "") [_refreshtries = 0]
          _refreshtries = (+ $_refreshtries 1)
          if (>= $_refreshtries 10) [
            echo "^f5[Workshop] ^f7If you recently registered an item, it may still be in progress, check your Steam downloads page"
            _refreshtries = 0
          ]
        ]
      ]

      if (!= $_allnewregids 0) [
        if (= (listcompare (at $_allregcontent 1) $_allnewregids) 0) [
          looplist ni $_allnewregids [
            echo (concatword "^f5[Workshop] ^f0Added ^f7" (getregisteredmapbyid $ni) "^f4#" $ni)
          ]
        ]
      ]

      if (!= $_alldelregids 0) [
        looplist di $_alldelregids [
          echo (concatword "^f5[Workshop] ^f3Removed ^f7" (at (at $_allregcontent 0) (indexof (at $_allregcontent 1) $di)) " ^f4#" $di)
        ]
      ]
    ] [if (= $arg1 1) [echo "^f5[Workshop] ^f7There is no registered content.^nRegister new items at ^f5steamcommunity.com/workshop/browse/?appid=1274540"]]
  ]
]

//read files and other things only once when needed
_updateworkshop = [
  _getregistupdate $arg1
  _allregcontent = (getallregisteredcontent)
  _allusermaps = (getallusermaps)
  _ucfolders = (filteremptyfolder (workshopusercontent) "ogz")
  _ucfolderids = ""
  looplist ucf $_ucfolders [
    loopfiles um (concatword "packages/" $ucf) "ogz" [
      append _ucfolderids (indexof $_ucfolders @ucf)
    ]
  ]
  _ucmaphasthumb = (findfile (concatword "packages/" $mapid "/" $mapid ".jpg"))
  _ucmaphasdesc = (!=s $maptitle "Untitled Map by Unknown")
  _mapidhasmap = (getfileslistlen (concatword "packages/" $mapid) "ogz")
  _indexofmapid = (indexof (workshopusercontent) $mapid)
  if (=s (mapname) "") [_rndmapname = (_getmillisletters)]
]

_mapthumbbutton = [
  guibutton (strstatecolor (= $_ucmaphasthumb 0) "save thumbnail " "8" "0") [
    //prevents careless screenshots
    if (&& (= (getcampitch) 0.0) (= (getcamyaw) 0.0)) [
      echo "^f5[workshop] ^f7find a better angle that shows what your map is about"
    ] [
      cleargui
      savemapthumb (concatword "packages/" $mapid) $mapid [showgui workshopgui; _updateworkshop]
    ]
  ] "icons8/camera.png"
]

_mapcreateidbutton = [
  guibutton (concatword "^f8mark map ^f7" $_wsmname " ^f8as finished") [
    echo (concatword "^f5[workshop] ^f7creating map ID for " $_wsmname "...")
    mapidcreated = [
      saveworkshopmap $_wsmname
      savemap $_wsmname
      if (=s $mapname "") [coop $_wsmname]
      _updateworkshop
      uploadmaptoworkshop $_wsmname //prevents empty maps
    ]
    mapid ""
    createmapid 
  ]
]

_mapcommitbutton = [
  guibutton (concatword "^f8commit changes") [
    if (!=s (getusermapbyid $mapid) $_wsmname) [
      //renameworkshopusermap $mapid $_wsmname
      delworkshopusermap $mapid
    ]
    saveworkshopmap $_wsmname
    _updateworkshop
    echo "^f5[workshop] ^f7done, click on ^"submit^" to share your updates"
  ] "icons8/share.png"
]

_mapeditdescbutton = [
  guibutton (strstatecolor $_ucmaphasdesc "edit description " "0" "8") [
    setmapdescription $maptitle
  ]
]

_mapsubmitbutton = [
  guibutton (strstatecolor $_ucmaphasdesc (strstatecolor $_ucmaphasthumb "submit map" "" "8") "0" "") [
    if (_ucmaphasthumb) [
      uploadmaptoworkshop $_wsmname
      echo (concatword "^f7find your map ^"" $_wsmname "^" at ^f5steamcommunity.com/sharedfiles/filedetails/?id=" $mapid)
    ] [echo "^f5[workshop] ^f3your map does not have a thumbnail"]
  ] "icons8/upload.png"
]

//gives a really creative name to untitled maps
_getmillisletters = [
  _mlr = ""
  loopchar m (getmillis) [_mlr = (concatword $_mlr (at [ba ce di to ru sa re li mo pu] $m))]
  result $_mlr
]

if (integration) [_updateworkshop] [error "^f5[Workshop] ^f3Steam is not running"]
newgui workshopgui [
  if (! (integration)) [
    guitextbox "^f1Workshop ^f2features are only available on the ^f1Steam ^f2version of ^f6Tomatenquark." 40 0
    guialign 0 [guitext "^f5steampowered.com/app/1274540" "icons8/steam.png"]
    guialign 0 [guitext "^f7tomatenquark.org" "tq.png"]
  ] [
    guistayopen [
      //Uploading maps to Workshop -- Start
      //is connected and in coopedit
      guibutton "^f8refresh" [_updateworkshop] "icons8/steam.png"
      if (&& (isconnected) (m_edit (getmode))) [

        //name for untitled maps
        _mname = $_rndmapname
        _wsmname = $(at [mapname _mname] (=s (mapname) ""))

        //mapid doesn't have .ogz, or doesn't exist locally
        if (|| (= $_mapidhasmap 0) (= $_indexofmapid -1)) [
          _mapcreateidbutton //runs createmapid, saveworkshopmap, savemap and uploadmaptoworkshop
          guitextbox "^f7By submitting this item, you agree to the ^f~[workshop terms of service]" 30 0 0xFF00FF
        ] [
          //mapid exists locally and has .ogz
          guitext "^f1this map is available online"
          //warnings
          if (= $_ucmaphasthumb 0) [guitext "^f3missing thumbnail"]
          if (= $_ucmaphasdesc 0) [guitext "^f6missing description"]
          guibar
          guilist [
            _mapthumbbutton //runs savemapthumb
            _mapcommitbutton //runs saveworkshopmap
          ]
          guilist [
            _mapeditdescbutton //say command to change maptitle
            _mapsubmitbutton //if map has thumbnail, run uploadmaptoworkshop
          ]
        ]
        guibar
      ] [guitext "^f3you are not in edit mode"]
      //Uploading maps to Workshop -- End

      //Listing local mapids and their maps -- Start
      guitext (concatword "^f2finished maps (" (listlen $_allusermaps) ")")
      if $_ucfolders [
        if (=s (getalias _curtabum) "") [_curtabum = 0] //guilistscroll
        guilistscroll um $_allusermaps [
          //get mapid by mapname
          _umid = (at $_ucfolders (at $_ucfolderids (indexof $_allusermaps $um)))
          guilist [
            //delete mapid locally
            guibutton "" [delmap (concatword "packages/" @_umid "/" @um); _updateworkshop] "trash.png"
            //show custom maps
            guibutton (strstatecolor (=s $mapid $_umid) (concatword $um ".ogz")) [loadcustommap @um; showcustommaps] (at ["icons8/folder.png" "server"] (=s $mapid $_umid))
            //same mapid, different names (renamed maps)
            if (&& (=s $mapid $_umid) (!=s $um $_wsmname)) [guitext (concatword " ^f4(" $_wsmname ")") 0]
          ]
        ] 4
      ] [guitext "^f1there's no map to show"]
      //Listing local mapids and their maps -- End

      //Listing external mapids and their maps -- Start
      guitab "^f0Registered Content"
      guibutton "^f8refresh" [_updateworkshop 1] "icons8/steam.png"
      if (!=s $_allregcontent "") [
        if (=s (getalias _curtabrf) "") [_curtabrf = 0] //guilistscroll
        _rmid = 0
        //list maps from all mapids
        guilistscroll rf (at $_allregcontent 0) [
          //list maps individually (for mapids with more than one map)
          looplist rm $rf [
            guilist [
              //mapids represented by simpler numbers
              guibutton (concatword "^f5[" $_rmid "]") [echo (concatword "^f5steamcommunity.com/sharedfiles/filedetails/?id=" (at (at $_allregcontent 1) @_rmid))] 0
              guibutton $rm [map (concatword (at (at $_allregcontent 1) @_rmid) "/" @rm)] "icons8/steam.png"
            ]
          ]
          _rmid = (+ $_rmid 1)
        ] 8
      ] [guitext "^f1there's no map to show"]
      //Listing external mapids and their maps -- End
    ]
  ]
] "^f8Local Maps"