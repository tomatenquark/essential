// handles gamemodes and maps

// note: a single map can also belong to two or more lists

// has pickups
ffamaps1 = ["blank" "frag-lab" "gunmetal" "valkyria" "collide" "luna" "mc-lab" "pandora" "breakout" "hurricane3" "laucin" "absolute" "outpost" "tubes"]

// has flags
ctfmaps1 = ["collide" "luna" "mc-lab" "pandora" "breakout" "hurricane3" "deadworld" "laucin" "tubes"]

// has bases
capturemaps1 = ["collide" "luna" "mc-lab" "pandora" "deadworld" "outpost"]

allmaps = (concat $ffamaps1 $capturemaps1 $ctfmaps1)
allmaps = (listunrepeat $allmaps)

// gamemode "attributes" icons
_geticonsfromlist = [
	_ilist = (loopconcat n 23 [$n])
	_it = (at [[[-][5 6 7 15 16 17 18 19 20 21 22]][[+][23]][[-][5 6 7 15 17 18 19 20 21 22]][[+][12]][[c][3][16]][[+][1 8 9 10 11 12 13]][[c][5][16]][[+][19 20]][[c][7][16]][[c][8][17]][[c][8][18]][[c][0][16 21]][[c][3][16 21]][[c][0][16 22]][[c][3][16 22]][[c][0][16 5]][[c][3][16 5]][[c][5][16 21]][[c][5][16 22]][[c][5][16 5]][[c][0][16 15]][[c][3][16 15]][[c][5][16 15]]] $arg1)
	if (=s (at $_it 0) "-") [ //blacklist
		looplist il (at $_it 1) [
			if (> (indexof $_ilist $il) -1)[_ilist = (listreplace $_ilist (indexof $_ilist $il) "")]
		]
	]
	if (=s (at $_it 0) "+") [ // whitelist
		_ilist = []
		looplist il (at $_it 1) [append _ilist $il]
	]
	if (=s (at $_it 0) "c") [ // copy and add
		_ilist = []
		_geticonsfromlist (at $_it 1) (at $_it 2)
	]
	if (!=s $arg2 "") [looplist i $arg2 [append _ilist $i]]
	result $_ilist
]

_getmodeicons = [
	guilist [
		looplist i (_geticonsfromlist $arg1) [
			guiimage (concatword "packages/icons/modes/" (at ["bluearmour" "greenamour" "yellowarmour" "health" "quad" "flag" "flag_b" "flag_r" "fist" "shotg" "chaing" "rocket" "rifle" "gl" "pistol" "skull" "team" "capture" "regencapture" "rndgun" "rndarmour" "ctf" "protect" "editing"] $i) ".png") [echo (concatword "^f6" (at $modenames @arg1) "^f~: " (strreplace (at ["^f~Instant ^f1blue armour ^f~when spawning (^f0+50 ^f7health^f~)" "^f0green armour ^f~pickups are available (^f0+100 ^f7health^f~)" "^f2yellow armour ^f~pickups are available (^f0+200 ^f7health^f~)" "^f8health ^f~and ^f8healthboost ^f~pickups are available (^f0+25 ^f7health / ^f0+50 ^f7health limit^f~)" "^f8quaddamage ^f~pickups are available (^f04x ^f7more damage^f~)" "^f4gray flag ^f~must be held for 20 seconds" "^f1blue flag ^f~must be protected" "^f3red flag ^f~must be stolen" "^f8chainsaw ^f~weapon is available (^f8default key: 0^f~)" "^f8shotgun ^f~weapon is available (^f8default key: 1^f~)" "^f8chaingun ^f~weapon is available (^f8default key: 2^f~)" "^f8rocket ^f~weapon is available (^f8default key: 3^f~)" "^f8rifle ^f~weapon is available (^f8default key: 4^f~)" "^f8grenade launcher ^f~weapon is available (^f8default key: 5^f~)" "^f8pistol ^f~weapon is available (^f8default key: 6^f~)" "^f8skulls ^f~must be collected" "^f1good ^f~and ^f3evil ^f~teams are available" "^f8bases ^f~must be captured (^f0extra ammo spawns in allied bases^f~)" "^f8bases ^f~must be captured (^f0regenerate health and ammo next to allied bases^f~)" "^f5random weapons ^f~when spawning" "^f5random armour ^f~when spawning" "^f3red flag ^f~must be stolen and brought to the ^f1blue flag" "^f3red flag ^f~must be touched, ^f1blue flag ^f~can be held" "^f~all ^f8pickups ^f~are available, ^f8geometry editing ^f~is allowed and players can fly (^f8default key: E^f~)"] @i) "^^f" []))] 0.5 0
		]
	]
]

maxmaplistsplitlen = 17
genmapitems = [
	local curmap mapbutton
	mapbutton = [guibutton $arg1 [mode $_targetmode; map @arg1] (if (=s $guirollovername $arg1) [if (|| (= (at (numplayers) 0) 0) (&& (!= (getmastermode) 0) (haspriv (getclientnum)))) [result "arrow_fw.jpg"] [result "icons8/thumbsup.png"]] [result "inexor/action.jpg"])]
	if (>= (listlen $arg1) $maxmaplistsplitlen) [
		guilistscroll curmap $arg1 [mapbutton $curmap] 8 1
	] [
		guilistsplit curmap 2 $arg1 [mapbutton $curmap]
	]
]

showmapshot = [
	guibar
	guiimage (concatword "packages/base/" (if (> $numargs 0) [result $arg1] [at $guirollovername 0]) ".jpg") $guirolloveraction 4 1 "data/cube.png"
]

delmapgui = [
	newgui _tmp2 [
		guitext (concatword "are you sure you want to delete ^f8" @arg1 "^f~.ogz?")
		guitext "existing backup (.bak) files will be kept intact."
		guibar
		guialign 0 [
			guibutton "return" [cleargui 1] "arrow_bw"
			guibar
			guibutton "confirm" [delmap @@@arg1; cleargui; @@@arg2] "trash.png"
		]
	] 0
	showgui _tmp2
]

_targetmode = $mode
_targetmodemodifier = $mode
_targetmaprotation = 0
_modemodifiernames = ["all" "items" "flags" "bases"]
newgui gamemode [
	guistayopen [
		guilist [
			guilist [
				guiitemmove 0 0 0 [
					guialign 0 [guitext "^f8mode attributes" 0]
					_getmodeicons $_targetmode
				]
				guiitemmove 1 0 -2 [guibutton "^f4info" [echo (concatword "^f7" (getmodeinfo $_targetmode))] 0]
				guiitemmove -1 0 0 [
					guilistsplit targetmodename 2 ["FFA" "coop-edit" "teamplay" "instagib" "efficiency" "tactics" "capture" "CTF" "protect" "hold" "collect"] [
						guistrut 13 1
						guiradio (concatword "^f0" $targetmodename) _targetmodemodifier (indexof $modenamesfull $targetmodename) [_targetmode = $_targetmodemodifier]
						if (= $_targetmodemodifier (indexof $modenamesfull $targetmodename)) [
							guiitemmove -1 2 0 [
								looplist cmodf (listreplace (listmatch $modenamesfull $targetmodename) 0 "") [
									guiradio (strreplace (strreplace $cmodf $targetmodename "") " " "") _targetmode (indexof $modenamesfull $cmodf)
								]
								if (!= $_targetmodemodifier $_targetmode)[guibutton "modifiers" [_targetmode = $_targetmodemodifier] "inexor/exit"]
							]
						]
					]
				]
				guistrut 28 1
			]
			//guitab (concatword "^f8maps (" (strlower (at $_modemodifiernames $_targetmaprotation)) ")")
			guibar
			guilist [
				guialign 1 [
					if (integration) [
						guibutton "^f5workshop" [_updateworkshop; showgui workshopgui] "icons8/steam.png"
						guistrut 1
					]
					if (|| $editing (m_edit (getmode))) [guialign 1 [guibutton "custom maps" [showcustommaps] "icons8/folder.png"]]
				]
				guialign 0 [guitext "^f8available entities" 0]
				guialign 0 [
					_cmodfu = (strupper (at $modenames $_targetmode))
					if (|| (> (strstr $_cmodfu "CTF") -1) (> (strstr $_cmodfu "PROTECT") -1)) [_targetmaprotation = 2]
					if (|| (> (strstr $_cmodfu "HOLD") -1) (> (strstr $_cmodfu "CAPTURE") -1)) [_targetmaprotation = 3]
					looplist targetmodenamemodifier $_modemodifiernames [
						guiradio $targetmodenamemodifier _targetmaprotation (indexof $_modemodifiernames $targetmodenamemodifier) [
							_curtabcurmap = 0
							if (= (strstr [1 0 11 9] (at [1 0 11 9] (indexof $_modemodifiernames @targetmodenamemodifier))) -1) [
								_targetmodemodifier = (at [1 0 11 9] (indexof $_modemodifiernames @targetmodenamemodifier))
								_targetmode = $_targetmodemodifier
								_mapsfromlist = [result (at [allmaps ffamaps1 ctfmaps1 capturemaps1] (indexof $_modemodifiernames @@targetmodenamemodifier))]
								guirollovername = (at $(_mapsfromlist) (rnd (listlen $(_mapsfromlist))))
								guirolloveraction = [mode $_targetmode; map $guirollovername]
							]
						]
					]
				]
				guibar
				guilist [
					//guistrut (div (listlen $allmaps) 2) 1
					guilist [
					guistrut 20 1
						genmapitems $(at [allmaps ffamaps1 ctfmaps1 capturemaps1] $_targetmaprotation)
					]
					showmapshot
					guiitemmove -1 5.7 -15.7 [
						guititle (if (> (indexof $allmaps (at $guirollovername 0)) -1) [result (concatword "^f6" (at $modenames $_targetmode) "^n^f7" (at $guirollovername 0))] [result ""; guirolloveraction = [echo "^f3select a map first"]])
					]
				]
				guistrut 3 0
			]
		]
		if (!=s (getalias listvotes) "") [guimappoll]
	]
] "^f8mode & map"

//custom maps
_ctxmap = ""
targetmodenamemodifiersearch = ""
newgui mymaps [
	guistayopen [
		guilist [
			guilist [
				guilistscroll curmap $mymaps [
					if (> (strlen $curmap) 15) [_curmapm = (strscroll $curmap 15 150 0)] [_curmapm = $curmap] //slides text
					guilist [
						if (&& (!=s $targetmodenamemodifiersearch "") (!= (strstr $curmap $targetmodenamemodifiersearch) -1)) [guitext "^f7>" 0]
						guibutton (strstatecolor (=s $_ctxmap $curmap) $_curmapm "1" "0") [
							if (=s $_ctxmap @curmap) [map @@curmap]
							_ctxmap = @curmap
						] "icons8/folder.png"
					]
				] 10 1 [
					guilist [
						guitext (concatword "^f4(" (listlen $mymaps) ") ") 0
						guifield targetmodenamemodifiersearch 10 [
							_curfoundmap = (indexof $mymaps (at (substr $mymaps (strstr $mymaps $targetmodenamemodifiersearch)) 0))
							if (& (!= $_curfoundmap "") (!= $_curfoundmap -1)) [
								_curtabcurmap = (max 0 (min (- (listlen $mymaps) 10) $_curfoundmap))
								_ctxmap = (at $mymaps $_curfoundmap)
							]
						]
					]
				] [
					guitextbox "There are no maps yet.^nwhile editing, a custom map can be saved using the ^f8/savemap mapname ^f~command. Maps are ^f8.ogz ^f~files saved in the ^f8Tomatenquark/packages/base ^f~folder by default.^nThis menu can be accessed through the interface in ^f8ESC > editing^f7, or by typing the command ^f8/showmymaps^f7." 35 7
					guibar
					guibutton "^f2advanced editing commands" [showgui editing] "arrow_fw"
				]
				guistrut 20 1
			]
			guibar
			if (=s $_ctxmap "") [_ctxmap = (at $mymaps 0)]
			guilist [loadcustommap $_ctxmap]
		]
		//guitab "^f1Steam Workshop"
		//workshopgui
	]
] "^f8local maps"

showmymaps = [
	mymaps = ""
	loopfiles curmap "packages/base" "ogz" [
		if (< (indexof $allmaps $curmap) 0) [
			append mymaps $curmap
		]
	]
	showgui mymaps
]

showcustommaps = [showmymaps]

loadcustommap = [
	local _ctxmap _mapname
	_ctxmap = $arg1; _mapname = $_ctxmap

	guibutton "load and edit" [coop $_ctxmap; edittoggle; if (integration) [_updateworkshop]] "modes/editing.png"
	guibutton "^f5Share to Gallery" [
		if (integration) [
			if (isconnected) [_updateworkshop; showgui workshopgui] [echo "^f5[Workshop] ^f3Load a map first"]
		] [echo "^f5[Workshop] ^f1Workshop ^f2features are only available on the ^f1Steam ^f2version of ^f6Tomatenquark.^n^f5steampowered.com/app/1274540^n^f7tomatenquark.org"]
	] "icons8/steam.png"
	guitext "^f7map name"
	guialign 0 [guifield _mapname -15 [if (!=s $_ctxmap $_mapname) [if (&& (findfile (concatword "packages/base/" $_mapname ".ogz"))) [echo "^f7there is already a map with this name"; _mapname = $_ctxmap] [renamemap $_ctxmap $_mapname; _ctxmap = $_mapname; showcustommaps]]]]
	guialign 0 [guiimage (concatword "<thumbnail: 256>packages/base/" $_ctxmap "." (at ["png" "jpg"] (findfile (concatword "packages/base/" $_ctxmap ".jpg")))) [map $_ctxmap; if (integration) [_updateworkshop]] 4 0 "packages/textures/nomapthumb.png"]
	guialign 0 [
		guibutton "config.." [notepad (concatword "packages/base/" $_ctxmap ".cfg")]
		guibar
		guibutton "delete" [
			delmapgui $_ctxmap [showcustommaps]
		] "trash.png"
	]
]
